// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:gogaming_app/config/config.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatformSit {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return androidSit;
      case TargetPlatform.iOS:
        return iosSit;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions androidSit = FirebaseOptions(
    apiKey: 'AIzaSyAf6QN0f83Vqt-bimVTD_0xrHvdbhjQQDo',
    appId: '1:622726847917:android:287efea4c4793537ced524',
    messagingSenderId: '622726847917',
    projectId: 'thirdlogin-373003',
    storageBucket: 'thirdlogin-373003.appspot.com',
  );

  static const FirebaseOptions iosSit = FirebaseOptions(
    apiKey: 'AIzaSyB71SBGofeRclzPwyO0WteyrllvjxKpjLM',
    appId: '1:622726847917:ios:23939912feabfa52ced524',
    messagingSenderId: '622726847917',
    projectId: 'thirdlogin-373003',
    storageBucket: 'thirdlogin-373003.appspot.com',
    iosBundleId:
        Config.tenantId == '1' ? 'com.gogaming.sit1' : 'com.gogaming.sit2',
  );

  static FirebaseOptions get currentPlatformPro {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return androidPro;
      case TargetPlatform.iOS:
        return iosPro;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions androidPro = FirebaseOptions(
    apiKey: 'AIzaSyAl3b4maul0692hppyxjS6J8hAFRLQhVkM',
    appId: '1:443049792076:android:0bca086ffec6ef546c9ae9',
    messagingSenderId: '443049792076',
    projectId: 'gogaming-prod',
    storageBucket: 'gogaming-prod.appspot.com',
  );

  static const FirebaseOptions iosPro = FirebaseOptions(
    apiKey: 'AIzaSyAS7FGio47i8fFwnol6jXowbSdqiDZ_nUw',
    appId: '1:443049792076:ios:fc77cfa995333d0e6c9ae9',
    messagingSenderId: '443049792076',
    projectId: 'gogaming-prod',
    storageBucket: 'gogaming-prod.appspot.com',
    iosBundleId:
        Config.tenantId == '1' ? 'com.gogaming.lt' : 'com.platform.mrcat',
  );
}
